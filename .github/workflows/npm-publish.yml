name: Publish to npm

on:
  push:
    tags:
      - 'v*' # 当推送 v 开头的 tag 时触发，例如 v1.0.2

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      # 安装依赖
      - name: Install dependencies
        run: npm ci

      # 安装 Playwright 浏览器
      - name: Install Playwright browsers
        run: npx playwright install chromium

      # 构建项目
      - name: Build
        run: npm run build

      # 获取版本号并验证
      - name: Check version
        id: version
        run: |
          # 从 tag 中提取版本号（去掉 v 前缀）
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

          # 获取 package.json 中的版本号
          PACKAGE_VERSION=$(node -p "require('./package.json').version")

          # 验证版本号是否匹配
          if [ "$VERSION" != "$PACKAGE_VERSION" ]; then
            echo "Error: Tag version ($VERSION) doesn't match package.json version ($PACKAGE_VERSION)"
            exit 1
          fi

          echo "Publishing version $VERSION"

      # 发布到 npm（需要 2FA 时会使用 npm automation token）
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # 创建 GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          body: |
            ## @hangox/google-search v${{ steps.version.outputs.VERSION }}

            ### 安装
            ```bash
            npm install -g @hangox/google-search@${{ steps.version.outputs.VERSION }}
            ```

            ### 使用
            ```bash
            google-search "搜索关键词"
            ```

            ### npm 包
            https://www.npmjs.com/package/@hangox/google-search/v/${{ steps.version.outputs.VERSION }}